name: Publish to npm

on:
  workflow_dispatch: # Manual trigger only

permissions:
  contents: write

jobs:
  check-requirements:
    name: Check all requirements
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20, 22] # Test on Node.js versions 18, 20, and 22
    steps:
      - name: Check for changesets
        run: |
          if [ ! -d ".changeset" ] || [ -z "$(find .changeset -type f -name '*.md' ! -name 'README.md')" ]; then
            echo "No valid changesets found. Cannot publish."
            exit 1
          fi

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm test

      - name: Build project
        run: npm run build

  version-bump:
    name: Version Bump PR
    runs-on: ubuntu-latest
    needs: check-requirements
    outputs:
      pr_number: ${{ steps.create-pr.outputs.pull-request-number }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Create version bump branch (using Changesets)
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"

          # Create a temporary branch for the version bump
          BRANCH_NAME="changeset-release-${{ github.run_id }}"
          git checkout -b "$BRANCH_NAME"

          # Run Changeset version bump
          npx changeset version

          # Commit and push the changes
          git add .
          git commit -m "Version bump via Changesets"
          git push origin "$BRANCH_NAME"
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}

      - name: Create Pull Request
        id: create_pr # Assign an ID to the step
        run: |
          PR_URL=$(gh pr create --title "Version bump via Changesets" \
            --body "Automated version bump PR" \
            --base main \
            --head "$BRANCH_NAME" | tee pr_url.txt)
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}

      - name: Auto-approve and merge the version bump PR
        run: |
          PR_URL=$(cat pr_url.txt)
          gh pr merge "$PR_URL" --admin --squash -b "Version bump via Changesets. Auto-merged by GitHub Actions."
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}

  publish:
    name: Publish to npm
    runs-on: ubuntu-latest
    needs: version-bump
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Publish package to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          PACKAGE_NAME=$(jq -r .name package.json)
          PACKAGE_VERSION=$(jq -r .version package.json)

          if [[ "$PACKAGE_NAME" == @* ]]; then
            echo "Scoped package detected. Publishing with --access=restricted..."
            npm publish --access=restricted --tag "$PACKAGE_VERSION"
            npm dist-tag add "$PACKAGE_NAME@$PACKAGE_VERSION" --tag latest
          else
            echo "Unscoped package detected. Publishing without --access=restricted..."
            npm publish --tag "$PACKAGE_VERSION"
            npm dist-tag add "$PACKAGE_NAME@$PACKAGE_VERSION" --tag latest
          fi

  # notify-slack:
  #   name: Notify Slack
  #   runs-on: ubuntu-latest
  #   needs: publish
  #   steps:
  #     - name: Notify on Success
  #       if: success()
  #       uses: slackapi/slack-github-action@v1
  #       with:
  #         channel-id: 'C08BD0LQYLB'
  #         slack-message: 'âœ… Deployment Successful! ðŸš€'
  #       env:
  #         SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
  #         SLACK_ICON: 'https://jwt-smith.ndkariyasena.com/img/t5.png'

  #     - name: Notify on Failure
  #       if: failure()
  #       uses: slackapi/slack-github-action@v1
  #       with:
  #         channel-id: 'C08BD0LQYLB'
  #         slack-message: 'ðŸš¨ Deployment Failed! Check logs: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}'
  #       env:
  #         SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
  #         SLACK_ICON: 'https://jwt-smith.ndkariyasena.com/img/t5.png'
