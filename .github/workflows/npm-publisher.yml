name: Publish to npm

on:
  workflow_dispatch: # Manual trigger only

permissions:
  contents: write

jobs:
  unit-test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20, 22] # Test on Node.js versions 18, 20, and 22
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm test

  version-bump:
    name: Version Bump PR
    runs-on: ubuntu-latest
    needs: unit-test
    outputs:
      pr_number: ${{ steps.create-pr.outputs.pull-request-number }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Create version bump PR (using Changesets)
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"

          # Create a temporary branch for the version bump
          BRANCH_NAME="changeset-release-${{ github.run_id }}"
          git checkout -b "$BRANCH_NAME"

          # Run Changeset version bump
          npx changeset version

          # Commit and push the changes
          git add .
          git commit -m "Version bump via Changesets"
          git push -u origin "$BRANCH_NAME"

      - name: Auto-approve & merge PR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Auto-approve and merge version bump PR
        run: |
          gh pr review --approve --repo ${{ github.repository }} --head "$BRANCH_NAME" --admin
          gh pr merge --auto --squash --repo ${{ github.repository }} --head "$BRANCH_NAME" --admin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish:
    name: Publish to npm
    runs-on: ubuntu-latest
    needs: version-bump
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Publish package to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          PACKAGE_NAME=$(jq -r .name package.json)

          if [[ "$PACKAGE_NAME" == @* ]]; then
            echo "Scoped package detected. Publishing with --access=restricted..."
            npm publish dist --access=restricted
          else
            echo "Unscoped package detected. Publishing without --access=restricted..."
            npm publish dist
          fi

  # notify-slack:
  #   name: Notify Slack
  #   runs-on: ubuntu-latest
  #   needs: publish
  #   steps:
  #     - name: Notify on Success
  #       if: success()
  #       uses: slackapi/slack-github-action@v1
  #       with:
  #         channel-id: 'C08BD0LQYLB'
  #         slack-message: 'âœ… Deployment Successful! ðŸš€'
  #       env:
  #         SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
  #         SLACK_ICON: 'https://jwt-smith.ndkariyasena.com/img/t5.png'

  #     - name: Notify on Failure
  #       if: failure()
  #       uses: slackapi/slack-github-action@v1
  #       with:
  #         channel-id: 'C08BD0LQYLB'
  #         slack-message: 'ðŸš¨ Deployment Failed! Check logs: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}'
  #       env:
  #         SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
  #         SLACK_ICON: 'https://jwt-smith.ndkariyasena.com/img/t5.png'
